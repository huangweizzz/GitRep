<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

  <!--
  很显然这样写，是能够出结果的，但是弊端也很显然，我只能在页面要发出请求到我们的Controller时才被加载，还有一个更要不得的问题，这样编写，是不是加大了程序之间的耦合，
  使用spring的好处之一就是为了减少程序之间的耦合。
  显然这种方法是不可取的，这种方法是我在思考ssm该如何让整合时想到的愚蠢的想法。
  -->
  <!--
    在web基础阶段，有web三大组件：servlet，Filter，Listener。可以让Listener在服务器一启动的时候，就去加载配置文件，
    既然SpringMVC也属于Spring的一部分，那么Spring中就有整和SpringMVC的方式,交给spring去管理
  -->
  <!--配置监听器-->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext</param-value>
  </context-param>



  <!-- 配置过滤器，解决中文乱码 -->
  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>

    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>

  </filter>

  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!--   配置前端控制器：服务器启动必须加载，需要加载springmvc.xml配置文件-->
  <servlet>
    <servlet-name>dispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--配置初始化参数，创建完DispatcherServlet对象，就加载springmvc.xml配置文件-->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:springmvc</param-value>
    </init-param>
    <!--服务器启动时，创建DispatcherServlet对象-->
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>dispatcherServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
</web-app>